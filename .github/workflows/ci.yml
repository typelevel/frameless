name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['master']
    tags: ['v*']

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.15, 2.13.8]
        java: [8]
        distribution: [temurin]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Setup codecov
        run: pip install codecov

      - name: Test & Compute Coverage
        run: sbt ++${{ matrix.scala }} coverage frameless-test

      - name: Test & Compute Coverage Spark 3.1.x
        run: sbt ++${{ matrix.scala }} coverage frameless-test-spark31

      - name: Test & Compute Coverage Spark 3.0.x
        run: sbt ++${{ matrix.scala }} coverage frameless-test-spark30

      - name: Upload Codecov Results
        run: codecov -F ${{ matrix.scala }}

      - name: Binary compatibility check
        run: sbt ++${{ matrix.scala }} frameless-mimaReportBinaryIssues

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [8]
        distribution: [temurin]
    runs-on: ${{ matrix.os }}
    env:
      PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
      PGP_SECRET: ${{ secrets.PGP_SECRET }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      CI_SNAPSHOT_RELEASE: "frameless-publish"
      CI_RELEASE: "frameless-publishSigned"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}

      # Sequentially publish different artifacts for different Scala versions.
      # Doing that in parallel may cause unclosed staging repositories drop.
      - name: Publish Scala 2.12.15 artifacts
        run: sbt ++$SCALA_VERSION ci-release
        env:
          SCALA_VERSION: 2.12.15
        if: ${{ env.SONATYPE_PASSWORD != '' && env.SONATYPE_USERNAME != '' }}

      - name: Publish Scala 2.13.8 artifacts
        run: sbt ++$SCALA_VERSION ci-release
        env:
          SCALA_VERSION: 2.13.8
        if: ${{ env.SONATYPE_PASSWORD != '' && env.SONATYPE_USERNAME != '' }}

  docs:
    name: Documentation
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.15]
        java: [8]
        distribution: [temurin]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: actions/setup-java@v2
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}

      - name: Documentation
        run: sbt ++${{ matrix.scala }} doc mdoc
