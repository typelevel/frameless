name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['master']
    tags: ['v*']

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.15, 2.13.7]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Setup codecov
        run: pip install codecov

      - name: Test & Compute Coverage
        run: sbt ++${{ matrix.scala }} coverage frameless-test

      - name: Upload Codecov Results
        run: codecov -F ${{ matrix.scala }}

      - name: Binary compatibility check
        run: sbt ++${{ matrix.scala }} frameless-mimaReportBinaryIssues

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.15, 2.13.7]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}

      - name: Publish artifacts
        run: sbt ++${{ matrix.scala }} ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          CI_SNAPSHOT_RELEASE: "frameless-publish"
          CI_RELEASE: "frameless-publishSigned"
        if: ${{ env.SONATYPE_PASSWORD != '' && env.SONATYPE_USERNAME != '' }}

  docs:
    name: Documentation
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.15]
        java: [adopt@1.8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}

      - name: Documentation
        run: sbt ++${{ matrix.scala }} doc mdoc
